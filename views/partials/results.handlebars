<div id="results">
    <div id="readerStatus"></div>

        <div class="read">
            <div>
                <h2>Who's Logged In</h2>
            </div>
            <div id="allUsers"></div>
        </div>
        <div class="write-container">
            <div class="write">
                <h1>Generate ID for Card</h1>
                <form>
                    <div>
                    email <input id="email" type="email" name="email" placeholder="email" required> 
                    </div>
                    <div>
                    password <input id="pass" type="password" name="pass" placeholder="password" required> 
                    </div>
                </form>
                <button id="writeCardID">generate unique card id</button>
                <p id="writeMessageResponse"></p>
            </div>
        </div>
</div>
<script>
    let socket = io.connect('http://10.0.0.3:3000/');

    let rStatus = document.getElementById("readerStatus");

    let wCardId = document.getElementById("writeCardID");
    let msgRes = document.getElementById("writeMessageResponse");

    let email = document.getElementById('email');
    let pass = document.getElementById('pass');

    let allUsers = document.getElementById('allUsers')

    socket.on('trying', function(data) {
        rStatus.innerHTML = `<h2>${data}</h2>`;
        socket.emit('tryingRec', {
            message: "recieved someone is trying to log in"
        })
        console.log(data)
    })

    socket.on('removed', function(data) {
        rStatus.innerHTML = `<h2>${data}</h2>`;
        console.log(data);
    })

    wCardId.onclick = () => {
        if(email.value !== "" && email.value !== undefined && email.value !== null || pass.value !== "" && pass.value !== undefined && pass.value !== null){
            socket.emit("writeData",{
                message: "trying to wright data",
                email: email.value,
                pass: pass.value
            })
        }
    }

    socket.on('writeData', function(data){
        console.log(data);
        msgRes.innerHTML = data.message;
    })

    socket.on('getAllUsers', function(data){
        allUsers.innerHTML = data.map((item) => {
            return JSON.stringify(item);
        })
    })
</script>